============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.3.1, pluggy-1.0.0
rootdir: /home/kacper/grug_coder
plugins: hypothesis-6.78.0
collected 6 items

solutions/test_parse_nested_parens.py ...F.F                             [100%]

=================================== FAILURES ===================================
_____________ test_parse_nested_parens[((()()))-expected_result3] ______________

paren_string = '((()()))', expected_result = [4]

    @pytest.mark.parametrize(
        "paren_string, expected_result",
        [
            ("(()()) ((())) () ((())()())", [2, 3, 1, 3]),
            ("((()))", [3]),
            ("()", [1]),
            ("((()()))", [4]),
            ("()", [1]),
            ("()()()()", [1,1,1,1]),
        ]
    )
    def test_parse_nested_parens(paren_string: str, expected_result: List[int]):
>       assert parse_nested_parens(paren_string) == expected_result
E       assert [3] == [4]
E         At index 0 diff: 3 != 4
E         Use -v to get more diff

solutions/test_parse_nested_parens.py:21: AssertionError
_____________ test_parse_nested_parens[()()()()-expected_result5] ______________

paren_string = '()()()()', expected_result = [1, 1, 1, 1]

    @pytest.mark.parametrize(
        "paren_string, expected_result",
        [
            ("(()()) ((())) () ((())()())", [2, 3, 1, 3]),
            ("((()))", [3]),
            ("()", [1]),
            ("((()()))", [4]),
            ("()", [1]),
            ("()()()()", [1,1,1,1]),
        ]
    )
    def test_parse_nested_parens(paren_string: str, expected_result: List[int]):
>       assert parse_nested_parens(paren_string) == expected_result
E       assert [1] == [1, 1, 1, 1]
E         Right contains 3 more items, first extra item: 1
E         Use -v to get more diff

solutions/test_parse_nested_parens.py:21: AssertionError
=========================== short test summary info ============================
FAILED solutions/test_parse_nested_parens.py::test_parse_nested_parens[((()()))-expected_result3]
FAILED solutions/test_parse_nested_parens.py::test_parse_nested_parens[()()()()-expected_result5]
========================= 2 failed, 4 passed in 0.01s ==========================
